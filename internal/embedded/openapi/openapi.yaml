openapi: 3.0.0
info:
  contact:
    name: Starmap Project
    url: https://github.com/agentstation/starmap
  description: >-
    REST API for the Starmap AI model catalog with real-time updates via
    WebSocket and SSE.


    Features:

    - Comprehensive model and provider queries

    - Advanced filtering and search

    - Real-time updates via WebSocket and Server-Sent Events

    - In-memory caching for performance

    - Rate limiting and authentication support
  license:
    name: MIT
    url: https://github.com/agentstation/starmap/blob/master/LICENSE
  title: Starmap API
  version: "1.0"
paths:
  /api/v1/health:
    get:
      description: Health check endpoint (liveness probe)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
      summary: Health check
      tags:
        - health
  /api/v1/models:
    get:
      description: List all models with optional filtering
      parameters:
        - description: Filter by exact model ID
          in: query
          name: id
          schema:
            type: string
        - description: Filter by exact model name (case-insensitive)
          in: query
          name: name
          schema:
            type: string
        - description: Filter by partial model name match
          in: query
          name: name_contains
          schema:
            type: string
        - description: Filter by provider ID
          in: query
          name: provider
          schema:
            type: string
        - description: Filter by input modality (comma-separated)
          in: query
          name: modality_input
          schema:
            type: string
        - description: Filter by output modality (comma-separated)
          in: query
          name: modality_output
          schema:
            type: string
        - description: Filter by feature (streaming, tool_calls, etc.)
          in: query
          name: feature
          schema:
            type: string
        - description: Filter by tag (comma-separated)
          in: query
          name: tag
          schema:
            type: string
        - description: Filter by open weights status
          in: query
          name: open_weights
          schema:
            type: boolean
        - description: Minimum context window size
          in: query
          name: min_context
          schema:
            type: integer
        - description: Maximum context window size
          in: query
          name: max_context
          schema:
            type: integer
        - description: Sort field (id, name, release_date, context_window, created_at,
            updated_at)
          in: query
          name: sort
          schema:
            type: string
        - description: Sort order (asc, desc)
          in: query
          name: order
          schema:
            type: string
        - description: "Maximum number of results (default: 100, max: 1000)"
          in: query
          name: limit
          schema:
            type: integer
        - description: Result offset for pagination
          in: query
          name: offset
          schema:
            type: integer
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: List models
      tags:
        - models
  "/api/v1/models/{id}":
    get:
      description: Retrieve detailed information about a specific model
      parameters:
        - description: Model ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        $ref: "#/components/schemas/catalogs.Model"
                    type: object
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Get model by ID
      tags:
        - models
  /api/v1/models/search:
    post:
      description: Advanced search with multiple criteria
      requestBody:
        content:
          application/json:
            schema:
              $ref: "#/components/schemas/serve.SearchRequest"
        description: Search criteria
        required: true
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "400":
          description: Bad Request
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Search models
      tags:
        - models
  /api/v1/openapi.json:
    get:
      description: Returns the OpenAPI 3.0 specification for this API in JSON format
      responses:
        "200":
          description: OpenAPI 3.0 specification
          content:
            application/json:
              schema:
                type: object
      summary: Get OpenAPI specification (JSON)
      tags:
        - meta
  /api/v1/openapi.yaml:
    get:
      description: Returns the OpenAPI 3.0 specification for this API in YAML format
      responses:
        "200":
          description: OpenAPI 3.0 specification
          content:
            application/x-yaml:
              schema:
                type: string
      summary: Get OpenAPI specification (YAML)
      tags:
        - meta
  /api/v1/providers:
    get:
      description: List all providers
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: List providers
      tags:
        - providers
  "/api/v1/providers/{id}":
    get:
      description: Retrieve detailed information about a specific provider
      parameters:
        - description: Provider ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        $ref: "#/components/schemas/catalogs.Provider"
                    type: object
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Get provider by ID
      tags:
        - providers
  "/api/v1/providers/{id}/models":
    get:
      description: List all models for a specific provider
      parameters:
        - description: Provider ID
          in: path
          name: id
          required: true
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "404":
          description: Not Found
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Get provider models
      tags:
        - providers
  /api/v1/ready:
    get:
      description: Readiness check including cache and data source status
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "503":
          description: Service Unavailable
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      summary: Readiness check
      tags:
        - health
  /api/v1/stats:
    get:
      description: Get catalog statistics (model count, provider count, last sync)
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Catalog statistics
      tags:
        - admin
  /api/v1/update:
    post:
      description: Manually trigger catalog synchronization
      parameters:
        - description: Update specific provider only
          in: query
          name: provider
          schema:
            type: string
      responses:
        "200":
          description: OK
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      data:
                        type: object
                    type: object
        "500":
          description: Internal Server Error
          content:
            application/json:
              schema:
                allOf:
                  - $ref: "#/components/schemas/response.Response"
                  - properties:
                      error:
                        $ref: "#/components/schemas/response.Error"
                    type: object
      security:
        - ApiKeyAuth: []
      summary: Trigger catalog update
      tags:
        - admin
  /api/v1/updates/stream:
    get:
      description: Server-Sent Events stream for catalog change notifications
      responses:
        "200":
          description: Event stream
      summary: SSE updates stream
      tags:
        - updates
  /api/v1/updates/ws:
    get:
      description: WebSocket connection for real-time catalog updates
      responses:
        "101":
          description: Switching Protocols
      summary: WebSocket updates
      tags:
        - updates
servers:
  - url: //localhost:8080/api/v1
components:
  securitySchemes:
    ApiKeyAuth:
      description: API key for authentication (optional, configurable)
      in: header
      name: X-API-Key
      type: apiKey
  schemas:
    catalogs.ArchitectureType:
      enum:
        - transformer
        - moe
        - cnn
        - rnn
        - lstm
        - gru
        - vae
        - gan
        - diffusion
      type: string
      x-enum-comments:
        ArchitectureTypeCNN: Convolutional Neural Networks
        ArchitectureTypeDiffusion: Diffusion models (Stable Diffusion, DALL-E, etc.)
        ArchitectureTypeGAN: Generative Adversarial Networks
        ArchitectureTypeGRU: Gated Recurrent Unit networks
        ArchitectureTypeLSTM: Long Short-Term Memory networks
        ArchitectureTypeMoE: Mixture of Experts (Mixtral, GLaM, Switch Transformer)
        ArchitectureTypeRNN: Recurrent Neural Networks
        ArchitectureTypeTransformer: Transformer-based models (GPT, BERT, LLaMA, etc.)
        ArchitectureTypeVAE: Variational Autoencoders
      x-enum-descriptions:
        - Transformer-based models (GPT, BERT, LLaMA, etc.)
        - Mixture of Experts (Mixtral, GLaM, Switch Transformer)
        - Convolutional Neural Networks
        - Recurrent Neural Networks
        - Long Short-Term Memory networks
        - Gated Recurrent Unit networks
        - Variational Autoencoders
        - Generative Adversarial Networks
        - Diffusion models (Stable Diffusion, DALL-E, etc.)
      x-enum-varnames:
        - ArchitectureTypeTransformer
        - ArchitectureTypeMoE
        - ArchitectureTypeCNN
        - ArchitectureTypeRNN
        - ArchitectureTypeLSTM
        - ArchitectureTypeGRU
        - ArchitectureTypeVAE
        - ArchitectureTypeGAN
        - ArchitectureTypeDiffusion
    catalogs.Author:
      properties:
        aliases:
          description: Alternative IDs this author is known by (e.g., in provider catalogs)
          items:
            $ref: "#/components/schemas/catalogs.AuthorID"
          type: array
        catalog:
          allOf:
            - $ref: "#/components/schemas/catalogs.AuthorCatalog"
          description: Catalog and models
        created_at:
          description: Timestamps for record keeping and auditing
          type: string
        description:
          description: Description of what the author is known for
          type: string
        github:
          description: GitHub profile/organization URL
          type: string
        headquarters:
          description: Company/organization info
          type: string
        huggingface:
          description: Hugging Face profile/organization URL
          type: string
        icon_url:
          description: Author icon/logo URL
          type: string
        id:
          allOf:
            - $ref: "#/components/schemas/catalogs.AuthorID"
          description: Unique identifier for the author
        name:
          description: Display name of the author
          type: string
        twitter:
          description: X (formerly Twitter) profile URL
          type: string
        updated_at:
          description: Last updated date (YYYY-MM or YYYY-MM-DD format)
          type: string
        website:
          description: Website, social links, and other relevant URLs
          type: string
      type: object
    catalogs.AuthorAttribution:
      properties:
        patterns:
          description: Glob patterns to match model IDs
          items:
            type: string
          type: array
        provider_id:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderID"
          description: Optional provider to source models from
      type: object
    catalogs.AuthorCatalog:
      properties:
        attribution:
          allOf:
            - $ref: "#/components/schemas/catalogs.AuthorAttribution"
          description: Model attribution configuration for multi-provider inference
        description:
          description: Optional description of this mapping relationship
          type: string
      type: object
    catalogs.AuthorID:
      enum:
        - openai
        - anthropic
        - google
        - deepmind
        - meta
        - microsoft
        - mistral
        - cohere
        - groq
        - alibaba
        - qwen
        - xai
        - stanford
        - mit
        - cmu
        - uc-berkeley
        - cornell
        - princeton
        - harvard
        - oxford
        - cambridge
        - eth-zurich
        - uw
        - uchicago
        - yale
        - duke
        - caltech
        - huggingface
        - eleutherai
        - together
        - mosaicml
        - stability
        - runway
        - midjourney
        - laion
        - bigscience
        - alignment-research
        - h2o.ai
        - moxin
        - baidu
        - tencent
        - bytedance
        - deepseek
        - baai
        - 01.ai
        - baichuan
        - minimax
        - moonshotai
        - shanghai-ai-lab
        - zhipu-ai
        - sensetime
        - huawei
        - tsinghua
        - peking
        - nvidia
        - salesforce
        - ibm
        - apple
        - amazon
        - adept
        - ai21
        - inflection
        - character
        - perplexity
        - anysphere
        - cursor
        - cognitivecomputations
        - ehartford
        - nousresearch
        - teknium
        - jondurbin
        - lmsys
        - vicuna-team
        - stanford-alpaca
        - wizardlm
        - open-orca
        - phind
        - codefuse
        - thudm
        - gatech
        - fastchat
        - unknown
      type: string
      x-enum-varnames:
        - AuthorIDOpenAI
        - AuthorIDAnthropic
        - AuthorIDGoogle
        - AuthorIDDeepMind
        - AuthorIDMeta
        - AuthorIDMicrosoft
        - AuthorIDMistralAI
        - AuthorIDCohere
        - AuthorIDGroq
        - AuthorIDAlibabaQwen
        - AuthorIDQwen
        - AuthorIDXAI
        - AuthorIDStanford
        - AuthorIDMIT
        - AuthorIDCMU
        - AuthorIDUCBerkeley
        - AuthorIDCornell
        - AuthorIDPrinceton
        - AuthorIDHarvard
        - AuthorIDOxford
        - AuthorIDCambridge
        - AuthorIDETHZurich
        - AuthorIDUWashington
        - AuthorIDUChicago
        - AuthorIDYale
        - AuthorIDDuke
        - AuthorIDCaltech
        - AuthorIDHuggingFace
        - AuthorIDEleutherAI
        - AuthorIDTogether
        - AuthorIDMosaicML
        - AuthorIDStabilityAI
        - AuthorIDRunwayML
        - AuthorIDMidjourney
        - AuthorIDLAION
        - AuthorIDBigScience
        - AuthorIDAlignmentRC
        - AuthorIDH2OAI
        - AuthorIDMoxin
        - AuthorIDBaidu
        - AuthorIDTencent
        - AuthorIDByteDance
        - AuthorIDDeepSeek
        - AuthorIDBAAI
        - AuthorID01AI
        - AuthorIDBaichuan
        - AuthorIDMiniMax
        - AuthorIDMoonshot
        - AuthorIDShanghaiAI
        - AuthorIDZhipuAI
        - AuthorIDSenseTime
        - AuthorIDHuawei
        - AuthorIDTsinghua
        - AuthorIDPeking
        - AuthorIDNVIDIA
        - AuthorIDSalesforce
        - AuthorIDIBM
        - AuthorIDApple
        - AuthorIDAmazon
        - AuthorIDAdept
        - AuthorIDAI21
        - AuthorIDInflection
        - AuthorIDCharacter
        - AuthorIDPerplexity
        - AuthorIDAnysphere
        - AuthorIDCursor
        - AuthorIDCognitiveComputations
        - AuthorIDEricHartford
        - AuthorIDNousResearch
        - AuthorIDTeknium
        - AuthorIDJonDurbin
        - AuthorIDLMSYS
        - AuthorIDVicuna
        - AuthorIDAlpacaTeam
        - AuthorIDWizardLM
        - AuthorIDOpenOrca
        - AuthorIDPhind
        - AuthorIDCodeFuse
        - AuthorIDTHUDM
        - AuthorIDGeorgiaTechRI
        - AuthorIDFastChat
        - AuthorIDUnknown
    catalogs.AuthorMapping:
      properties:
        field:
          description: Field to extract from (e.g., "owned_by")
          type: string
        normalized:
          additionalProperties:
            $ref: "#/components/schemas/catalogs.AuthorID"
          description: Normalization map (e.g., "Meta" -> "meta")
          type: object
      type: object
    catalogs.EndpointType:
      enum:
        - openai
        - anthropic
        - google
        - google-cloud
      type: string
      x-enum-varnames:
        - EndpointTypeOpenAI
        - EndpointTypeAnthropic
        - EndpointTypeGoogle
        - EndpointTypeGoogleCloud
    catalogs.FeatureRule:
      properties:
        contains:
          description: If field contains any of these strings
          items:
            type: string
          type: array
        feature:
          description: Feature to enable (e.g., "tools", "reasoning")
          type: string
        field:
          description: Field to check (e.g., "id", "owned_by")
          type: string
        value:
          description: Value to set for the feature
          type: boolean
      type: object
    catalogs.FieldMapping:
      properties:
        from:
          description: Source field path in API response (e.g., "max_model_len")
          type: string
        to:
          description: Target field path in Model (e.g., "limits.context_window")
          type: string
      type: object
    catalogs.FloatRange:
      properties:
        default:
          description: Default value
          type: number
        max:
          description: Maximum value
          type: number
        min:
          description: Minimum value
          type: number
      type: object
    catalogs.IntRange:
      properties:
        default:
          description: Default value
          type: integer
        max:
          description: Maximum value
          type: integer
        min:
          description: Minimum value
          type: integer
      type: object
    catalogs.Model:
      properties:
        attachments:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelAttachments"
          description: Attachments - attachment support details
        authors:
          description: Authors/organizations of the model (if known)
          items:
            $ref: "#/components/schemas/catalogs.Author"
          type: array
        created_at:
          description: Timestamps for record keeping and auditing
          type: string
        description:
          description: Description of the model and its use cases
          type: string
        features:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelFeatures"
          description: Features - what this model can do
        generation:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelGeneration"
          description: Generation - core chat completions generation controls
        id:
          description: Core identity
          type: string
        limits:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelLimits"
          description: Model limits
        metadata:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelMetadata"
          description: Metadata - version and timing information
        name:
          description: Display name (must not be empty)
          type: string
        pricing:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelPricing"
          description: Operational characteristics
        reasoning:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelControlLevels"
          description: Reasoning - reasoning effort levels
        reasoning_tokens:
          allOf:
            - $ref: "#/components/schemas/catalogs.IntRange"
          description: ReasoningTokens - specific token allocation for reasoning processes
        response:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelDelivery"
          description: Delivery - technical response delivery capabilities (formats,
            protocols, streaming)
        tools:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTools"
          description: Tools - external tool and capability integrations
        updated_at:
          description: Last updated date (YYYY-MM or YYYY-MM-DD format)
          type: string
        verbosity:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelControlLevels"
          description: Verbosity - response verbosity levels
      type: object
    catalogs.ModelArchitecture:
      properties:
        base_model:
          description: Base model ID if fine-tuned
          type: string
        fine_tuned:
          description: Whether this is a fine-tuned variant
          type: boolean
        parameter_count:
          description: Model size (e.g., "7B", "70B", "405B")
          type: string
        precision:
          description: Legacy precision format (use Quantization for filtering)
          type: string
        quantization:
          allOf:
            - $ref: "#/components/schemas/catalogs.Quantization"
          description: Quantization level used by the model
        quantized:
          description: Whether the model has been quantized
          type: boolean
        tokenizer:
          allOf:
            - $ref: "#/components/schemas/catalogs.Tokenizer"
          description: Tokenizer type used by the model
        type:
          allOf:
            - $ref: "#/components/schemas/catalogs.ArchitectureType"
          description: Type of architecture
      type: object
    catalogs.ModelAttachments:
      properties:
        max_file_size:
          description: Maximum file size in bytes
          type: integer
        max_files:
          description: Maximum number of files per request
          type: integer
        mime_types:
          description: Supported MIME types
          items:
            type: string
          type: array
      type: object
    catalogs.ModelControlLevel:
      enum:
        - minimum
        - low
        - medium
        - high
        - maximum
      type: string
      x-enum-varnames:
        - ModelControlLevelMinimum
        - ModelControlLevelLow
        - ModelControlLevelMedium
        - ModelControlLevelHigh
        - ModelControlLevelMaximum
    catalogs.ModelControlLevels:
      properties:
        default:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelControlLevel"
          description: Default level
        levels:
          description: Which levels this model supports
          items:
            $ref: "#/components/schemas/catalogs.ModelControlLevel"
          type: array
      type: object
    catalogs.ModelDelivery:
      properties:
        formats:
          description: Available response formats (if format_response feature enabled)
          items:
            $ref: "#/components/schemas/catalogs.ModelResponseFormat"
          type: array
        protocols:
          description: Response delivery mechanisms
          items:
            $ref: "#/components/schemas/catalogs.ModelResponseProtocol"
          type: array
        streaming:
          description: Supported streaming modes (sse, websocket, chunked)
          items:
            $ref: "#/components/schemas/catalogs.ModelStreaming"
          type: array
      type: object
    catalogs.ModelFeatures:
      properties:
        allowed_tokens:
          description: "[Niche] Supports token whitelist"
          type: boolean
        attachments:
          description: Attachment support details
          type: boolean
        bad_words:
          description: "[Advanced] Supports bad words/disallowed tokens"
          type: boolean
        best_of:
          description: "[Advanced] Supports server-side sampling with best selection"
          type: boolean
        contrastive_search_penalty_alpha:
          description: "[Niche] Supports contrastive decoding"
          type: boolean
        diversity_penalty:
          description: "[Niche] Supports diversity penalty in beam search"
          type: boolean
        early_stopping:
          description: "[Niche] Supports early stopping in beam search"
          type: boolean
        echo:
          description: "[Advanced] Supports echoing prompt with completion"
          type: boolean
        format_response:
          description: Response delivery
          type: boolean
        frequency_penalty:
          description: Generation control - Repetition control
          type: boolean
        include_reasoning:
          description: Supports including reasoning traces in response
          type: boolean
        length_penalty:
          description: "[Niche] Supports length penalty (seq2seq style)"
          type: boolean
        logit_bias:
          description: Generation control - Token biasing
          type: boolean
        logprobs:
          description: Generation control - Observability
          type: boolean
        max_output_tokens:
          description: "[Core] Supports max_output_tokens parameter (some providers
            distinguish from max_tokens)"
          type: boolean
        max_tokens:
          description: Generation control - Length and termination
          type: boolean
        min_p:
          description: "[Advanced] Supports min_p parameter (minimum probability threshold)"
          type: boolean
        mirostat:
          description: Generation control - Alternative sampling strategies (niche)
          type: boolean
        mirostat_eta:
          description: "[Niche] Supports Mirostat eta parameter"
          type: boolean
        mirostat_tau:
          description: "[Niche] Supports Mirostat tau parameter"
          type: boolean
        modalities:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelModalities"
          description: Input/Output modalities
        n:
          description: Generation control - Multiplicity and reranking
          type: boolean
        no_repeat_ngram_size:
          description: "[Niche] Supports n-gram repetition blocking"
          type: boolean
        num_beams:
          description: Generation control - Beam search (niche)
          type: boolean
        presence_penalty:
          description: "[Core] Supports presence penalty"
          type: boolean
        reasoning:
          description: Reasoning & Verbosity
          type: boolean
        reasoning_effort:
          description: Supports configurable reasoning intensity
          type: boolean
        reasoning_tokens:
          description: Supports specific reasoning token allocation
          type: boolean
        repetition_penalty:
          description: "[Advanced] Supports repetition penalty"
          type: boolean
        seed:
          description: Generation control - Determinism
          type: boolean
        stop:
          description: "[Core] Supports stop sequences/words"
          type: boolean
        stop_token_ids:
          description: "[Advanced] Supports stop token IDs (numeric)"
          type: boolean
        streaming:
          description: Supports response streaming
          type: boolean
        structured_outputs:
          description: Supports structured outputs (JSON schema validation)
          type: boolean
        temperature:
          description: Generation control - Core sampling and decoding
          type: boolean
        tfs:
          description: "[Advanced] Supports tail free sampling"
          type: boolean
        tool_calls:
          description: |-
            Core capabilities
            Tool calling system - three distinct aspects:
          type: boolean
        tool_choice:
          description: Supports tool choice strategies (auto/none/required control)
          type: boolean
        tools:
          description: Accepts tool definitions in requests (accepts tools parameter)
          type: boolean
        top_a:
          description: "[Advanced] Supports top_a parameter (top-a sampling)"
          type: boolean
        top_k:
          description: "[Advanced] Supports top_k parameter"
          type: boolean
        top_logprobs:
          description: "[Core] Supports returning top N log probabilities"
          type: boolean
        top_p:
          description: "[Core] Supports top_p parameter (nucleus sampling)"
          type: boolean
        typical_p:
          description: "[Advanced] Supports typical_p parameter (typical sampling)"
          type: boolean
        verbosity:
          description: Supports verbosity control (GPT-5+)
          type: boolean
        web_search:
          description: Supports web search capabilities
          type: boolean
      type: object
    catalogs.ModelGeneration:
      properties:
        best_of:
          allOf:
            - $ref: "#/components/schemas/catalogs.IntRange"
          description: Server-side sampling with best selection
        contrastive_search_penalty_alpha:
          $ref: "#/components/schemas/catalogs.FloatRange"
        diversity_penalty:
          $ref: "#/components/schemas/catalogs.FloatRange"
        frequency_penalty:
          allOf:
            - $ref: "#/components/schemas/catalogs.FloatRange"
          description: Repetition control
        length_penalty:
          $ref: "#/components/schemas/catalogs.FloatRange"
        max_output_tokens:
          type: integer
        max_tokens:
          description: Length and termination
          type: integer
        min_p:
          $ref: "#/components/schemas/catalogs.FloatRange"
        mirostat_eta:
          $ref: "#/components/schemas/catalogs.FloatRange"
        mirostat_tau:
          allOf:
            - $ref: "#/components/schemas/catalogs.FloatRange"
          description: Alternative sampling strategies (niche)
        n:
          allOf:
            - $ref: "#/components/schemas/catalogs.IntRange"
          description: Multiplicity and reranking
        no_repeat_ngram_size:
          $ref: "#/components/schemas/catalogs.IntRange"
        num_beams:
          allOf:
            - $ref: "#/components/schemas/catalogs.IntRange"
          description: Beam search (niche)
        presence_penalty:
          $ref: "#/components/schemas/catalogs.FloatRange"
        repetition_penalty:
          $ref: "#/components/schemas/catalogs.FloatRange"
        temperature:
          allOf:
            - $ref: "#/components/schemas/catalogs.FloatRange"
          description: Core sampling and decoding
        tfs:
          $ref: "#/components/schemas/catalogs.FloatRange"
        top_a:
          $ref: "#/components/schemas/catalogs.FloatRange"
        top_k:
          $ref: "#/components/schemas/catalogs.IntRange"
        top_logprobs:
          description: Observability
          type: integer
        top_p:
          $ref: "#/components/schemas/catalogs.FloatRange"
        typical_p:
          $ref: "#/components/schemas/catalogs.FloatRange"
      type: object
    catalogs.ModelLimits:
      properties:
        context_window:
          description: Context window size in tokens
          type: integer
        output_tokens:
          description: Maximum output tokens
          type: integer
      type: object
    catalogs.ModelMetadata:
      properties:
        architecture:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelArchitecture"
          description: Technical architecture details
        knowledge_cutoff:
          description: Knowledge cutoff date (YYYY-MM or YYYY-MM-DD format)
          type: string
        open_weights:
          description: Whether model weights are open
          type: boolean
        release_date:
          description: Release date (YYYY-MM or YYYY-MM-DD format)
          type: string
        tags:
          description: Use case tags for categorizing the model
          items:
            $ref: "#/components/schemas/catalogs.ModelTag"
          type: array
      type: object
    catalogs.ModelModalities:
      properties:
        input:
          description: Supported input modalities
          items:
            $ref: "#/components/schemas/catalogs.ModelModality"
          type: array
        output:
          description: Supported output modalities
          items:
            $ref: "#/components/schemas/catalogs.ModelModality"
          type: array
      type: object
    catalogs.ModelModality:
      enum:
        - text
        - audio
        - image
        - video
        - pdf
        - embedding
      type: string
      x-enum-comments:
        ModelModalityEmbedding: Vector embeddings
      x-enum-descriptions:
        - ""
        - ""
        - ""
        - ""
        - ""
        - Vector embeddings
      x-enum-varnames:
        - ModelModalityText
        - ModelModalityAudio
        - ModelModalityImage
        - ModelModalityVideo
        - ModelModalityPDF
        - ModelModalityEmbedding
    catalogs.ModelOperationPricing:
      properties:
        audio_gen:
          description: Cost per audio generated
          type: number
        audio_input:
          description: Cost per audio input
          type: number
        function_call:
          description: Cost per function call
          type: number
        image_gen:
          description: Generation operations
          type: number
        image_input:
          description: Media operations
          type: number
        request:
          description: Core operations
          type: number
        tool_use:
          description: Cost per tool usage
          type: number
        video_gen:
          description: Cost per video generated
          type: number
        video_input:
          description: Cost per video input
          type: number
        web_search:
          description: Service operations
          type: number
      type: object
    catalogs.ModelPricing:
      properties:
        currency:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelPricingCurrency"
          description: Metadata
        operations:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelOperationPricing"
          description: Fixed costs per operation
        tokens:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenPricing"
          description: Token-based costs
      type: object
    catalogs.ModelPricingCurrency:
      enum:
        - USD
        - EUR
        - JPY
        - GBP
        - AUD
        - CAD
        - CNY
        - NZD
      type: string
      x-enum-comments:
        ModelPricingCurrencyAUD: Australian Dollar
        ModelPricingCurrencyCAD: Canadian Dollar
        ModelPricingCurrencyCNY: Chinese Yuan
        ModelPricingCurrencyEUR: Euro
        ModelPricingCurrencyGBP: British Pound Sterling
        ModelPricingCurrencyJPY: Japanese Yen
        ModelPricingCurrencyNZD: New Zealand Dollar
        ModelPricingCurrencyUSD: US Dollar
      x-enum-descriptions:
        - US Dollar
        - Euro
        - Japanese Yen
        - British Pound Sterling
        - Australian Dollar
        - Canadian Dollar
        - Chinese Yuan
        - New Zealand Dollar
      x-enum-varnames:
        - ModelPricingCurrencyUSD
        - ModelPricingCurrencyEUR
        - ModelPricingCurrencyJPY
        - ModelPricingCurrencyGBP
        - ModelPricingCurrencyAUD
        - ModelPricingCurrencyCAD
        - ModelPricingCurrencyCNY
        - ModelPricingCurrencyNZD
    catalogs.ModelResponseFormat:
      enum:
        - text
        - json
        - json_mode
        - json_object
        - json_schema
        - structured_output
        - function_call
      type: string
      x-enum-comments:
        ModelResponseFormatFunctionCall: Tool/function calling for structured data
        ModelResponseFormatJSON: JSON encouraged via prompting
        ModelResponseFormatJSONMode: Forced valid JSON (OpenAI style)
        ModelResponseFormatJSONObject: Same as json_mode (OpenAI API name)
        ModelResponseFormatJSONSchema: Schema-validated JSON (OpenAI structured output)
        ModelResponseFormatStructuredOutput: General structured output support
        ModelResponseFormatText: Plain text responses (default)
      x-enum-descriptions:
        - Plain text responses (default)
        - JSON encouraged via prompting
        - Forced valid JSON (OpenAI style)
        - Same as json_mode (OpenAI API name)
        - Schema-validated JSON (OpenAI structured output)
        - General structured output support
        - Tool/function calling for structured data
      x-enum-varnames:
        - ModelResponseFormatText
        - ModelResponseFormatJSON
        - ModelResponseFormatJSONMode
        - ModelResponseFormatJSONObject
        - ModelResponseFormatJSONSchema
        - ModelResponseFormatStructuredOutput
        - ModelResponseFormatFunctionCall
    catalogs.ModelResponseProtocol:
      enum:
        - http
        - grpc
        - websocket
      type: string
      x-enum-comments:
        ModelResponseProtocolGRPC: gRPC protocol
        ModelResponseProtocolHTTP: HTTP/HTTPS REST API
        ModelResponseProtocolWebSocket: WebSocket protocol
      x-enum-descriptions:
        - HTTP/HTTPS REST API
        - gRPC protocol
        - WebSocket protocol
      x-enum-varnames:
        - ModelResponseProtocolHTTP
        - ModelResponseProtocolGRPC
        - ModelResponseProtocolWebSocket
    catalogs.ModelStreaming:
      enum:
        - sse
        - websocket
        - chunked
      type: string
      x-enum-comments:
        ModelStreamingChunked: HTTP chunked transfer encoding
        ModelStreamingSSE: Server-Sent Events streaming
        ModelStreamingWebSocket: WebSocket streaming
      x-enum-descriptions:
        - Server-Sent Events streaming
        - WebSocket streaming
        - HTTP chunked transfer encoding
      x-enum-varnames:
        - ModelStreamingSSE
        - ModelStreamingWebSocket
        - ModelStreamingChunked
    catalogs.ModelTag:
      enum:
        - coding
        - writing
        - reasoning
        - math
        - chat
        - instruct
        - research
        - creative
        - roleplay
        - function_calling
        - embedding
        - summarization
        - translation
        - question_answering
        - vision
        - multimodal
        - audio
        - text_to_image
        - text_to_speech
        - speech_to_text
        - image_to_text
        - medical
        - legal
        - finance
        - science
        - education
      type: string
      x-enum-comments:
        ModelTagAudio: Audio processing
        ModelTagChat: Conversational AI
        ModelTagCoding: Programming and code generation
        ModelTagCreative: Creative content generation
        ModelTagEducation: Educational content
        ModelTagEmbedding: Text embeddings
        ModelTagFinance: Financial analysis
        ModelTagFunctionCalling: Tool/function calling
        ModelTagImageToText: Image captioning/OCR
        ModelTagInstruct: Instruction following
        ModelTagLegal: Legal document processing
        ModelTagMath: Mathematical problem solving
        ModelTagMedical: Medical and healthcare
        ModelTagMultimodal: Multiple input modalities
        ModelTagQA: Question answering
        ModelTagReasoning: Logical reasoning and problem solving
        ModelTagResearch: Research and analysis
        ModelTagRoleplay: Character roleplay and simulation
        ModelTagScience: Scientific applications
        ModelTagSpeechToText: Speech recognition
        ModelTagSummarization: Text summarization
        ModelTagTextToImage: Text-to-image generation
        ModelTagTextToSpeech: Text-to-speech synthesis
        ModelTagTranslation: Language translation
        ModelTagVision: Computer vision
        ModelTagWriting: Creative and technical writing
      x-enum-descriptions:
        - Programming and code generation
        - Creative and technical writing
        - Logical reasoning and problem solving
        - Mathematical problem solving
        - Conversational AI
        - Instruction following
        - Research and analysis
        - Creative content generation
        - Character roleplay and simulation
        - Tool/function calling
        - Text embeddings
        - Text summarization
        - Language translation
        - Question answering
        - Computer vision
        - Multiple input modalities
        - Audio processing
        - Text-to-image generation
        - Text-to-speech synthesis
        - Speech recognition
        - Image captioning/OCR
        - Medical and healthcare
        - Legal document processing
        - Financial analysis
        - Scientific applications
        - Educational content
      x-enum-varnames:
        - ModelTagCoding
        - ModelTagWriting
        - ModelTagReasoning
        - ModelTagMath
        - ModelTagChat
        - ModelTagInstruct
        - ModelTagResearch
        - ModelTagCreative
        - ModelTagRoleplay
        - ModelTagFunctionCalling
        - ModelTagEmbedding
        - ModelTagSummarization
        - ModelTagTranslation
        - ModelTagQA
        - ModelTagVision
        - ModelTagMultimodal
        - ModelTagAudio
        - ModelTagTextToImage
        - ModelTagTextToSpeech
        - ModelTagSpeechToText
        - ModelTagImageToText
        - ModelTagMedical
        - ModelTagLegal
        - ModelTagFinance
        - ModelTagScience
        - ModelTagEducation
    catalogs.ModelTokenCachePricing:
      properties:
        read:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Cache read costs
        write:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Cache write costs
      type: object
    catalogs.ModelTokenCost:
      properties:
        per_1m_tokens:
          description: Cost per 1M tokens
          type: number
        per_token:
          description: Cost per individual token
          type: number
      type: object
    catalogs.ModelTokenPricing:
      properties:
        cache:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCachePricing"
          description: Cache operations
        cache_read:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Alternative flat cache structure (for backward compatibility)
        cache_write:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Cache write costs (flat structure)
        input:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Core tokens
        output:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Standard output tokens
        reasoning:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelTokenCost"
          description: Advanced token types
      type: object
    catalogs.ModelTools:
      properties:
        tool_choices:
          description: >-
            Tool calling configuration

            Specifies which tool choice strategies this model supports.

            Requires both Tools=true and ToolChoice=true in ModelFeatures.

            Common values: ["auto"], ["auto", "none"], ["auto", "none", "required"]
          items:
            $ref: "#/components/schemas/catalogs.ToolChoice"
          type: array
        web_search:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelWebSearch"
          description: |-
            Web search configuration
            Only applicable if WebSearch=true in ModelFeatures
      type: object
    catalogs.ModelWebSearch:
      properties:
        default_context_size:
          allOf:
            - $ref: "#/components/schemas/catalogs.ModelControlLevel"
          description: Default search context size
        max_results:
          description: Plugin-based web search options (for models using OpenRouter's web
            plugin)
          type: integer
        search_context_sizes:
          description: Built-in web search options (for models with native web search like
            GPT-4.1, Perplexity)
          items:
            $ref: "#/components/schemas/catalogs.ModelControlLevel"
          type: array
        search_prompt:
          description: Custom prompt for search results
          type: string
      type: object
    catalogs.Provider:
      properties:
        aliases:
          description: Alternative IDs this provider is known by (e.g., in models.dev)
          items:
            $ref: "#/components/schemas/catalogs.ProviderID"
          type: array
        api_key:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderAPIKey"
          description: API key configuration
        catalog:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderCatalog"
          description: Models
        chat_completions:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderChatCompletions"
          description: Chat completions API configuration
        env_vars:
          description: Environment variables configuration
          items:
            $ref: "#/components/schemas/catalogs.ProviderEnvVar"
          type: array
        governance_policy:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderGovernancePolicy"
          description: Oversight and moderation practices
        headquarters:
          description: Company headquarters location
          type: string
        icon_url:
          description: Provider icon/logo URL
          type: string
        id:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderID"
          description: Core identification and integration
        name:
          description: Display name (must not be empty)
          type: string
        privacy_policy:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderPrivacyPolicy"
          description: Privacy, Retention, and Governance Policies
        retention_policy:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderRetentionPolicy"
          description: Data retention and deletion practices
        status_page_url:
          description: Status & Health
          type: string
      type: object
    catalogs.ProviderAPIKey:
      properties:
        header:
          description: Header name to send the API key in
          type: string
        name:
          description: Name of the API key parameter
          type: string
        pattern:
          description: Glob pattern to match the API key
          type: string
        query_param:
          description: Query parameter name to send the API key in
          type: string
        scheme:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderAPIKeyScheme"
          description: Authentication scheme (e.g., "Bearer", "Basic", or empty for direct
            value)
      type: object
    catalogs.ProviderAPIKeyScheme:
      enum:
        - Bearer
        - Basic
        - ""
      type: string
      x-enum-comments:
        ProviderAPIKeySchemeBasic: Basic authentication
        ProviderAPIKeySchemeBearer: Bearer token authentication (OAuth 2.0 style)
        ProviderAPIKeySchemeDirect: Direct value (no scheme prefix)
      x-enum-descriptions:
        - Bearer token authentication (OAuth 2.0 style)
        - Basic authentication
        - Direct value (no scheme prefix)
      x-enum-varnames:
        - ProviderAPIKeySchemeBearer
        - ProviderAPIKeySchemeBasic
        - ProviderAPIKeySchemeDirect
    catalogs.ProviderCatalog:
      properties:
        authors:
          description: List of authors to fetch from (for providers like Google Vertex AI)
          items:
            $ref: "#/components/schemas/catalogs.AuthorID"
          type: array
        docs:
          description: Documentation URL
          type: string
        endpoint:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderEndpoint"
          description: API endpoint configuration
      type: object
    catalogs.ProviderChatCompletions:
      properties:
        health_api_url:
          description: URL to health/status API for this service
          type: string
        health_components:
          description: Specific components to monitor for chat completions
          items:
            $ref: "#/components/schemas/catalogs.ProviderHealthComponent"
          type: array
        url:
          description: Chat completions API endpoint URL
          type: string
      type: object
    catalogs.ProviderEndpoint:
      properties:
        auth_required:
          description: "Required: Whether auth needed"
          type: boolean
        author_mapping:
          allOf:
            - $ref: "#/components/schemas/catalogs.AuthorMapping"
          description: Author extraction
        feature_rules:
          description: Feature inference rules
          items:
            $ref: "#/components/schemas/catalogs.FeatureRule"
          type: array
        field_mappings:
          description: Field mappings
          items:
            $ref: "#/components/schemas/catalogs.FieldMapping"
          type: array
        type:
          allOf:
            - $ref: "#/components/schemas/catalogs.EndpointType"
          description: "Required: API style"
        url:
          description: "Required: API endpoint"
          type: string
      type: object
    catalogs.ProviderEnvVar:
      properties:
        description:
          description: Human-readable description
          type: string
        name:
          description: Environment variable name
          type: string
        pattern:
          description: Optional validation pattern
          type: string
        required:
          description: Whether this env var is required
          type: boolean
      type: object
    catalogs.ProviderGovernancePolicy:
      properties:
        moderated:
          description: Whether provider content is moderated
          type: boolean
        moderation_required:
          description: Whether the provider requires moderation
          type: boolean
        moderator:
          description: Who moderates the provider
          type: string
      type: object
    catalogs.ProviderHealthComponent:
      properties:
        id:
          description: Component ID from the health API
          type: string
        name:
          description: Human-readable component name
          type: string
      type: object
    catalogs.ProviderID:
      enum:
        - alibaba
        - anthropic
        - anyscale
        - cerebras
        - checkstep
        - cohere
        - conectys
        - cove
        - deepmind
        - deepseek
        - google-ai-studio
        - google-vertex
        - groq
        - huggingface
        - meta
        - microsoft
        - mistral
        - openai
        - openrouter
        - perplexity
        - replicate
        - safetykit
        - together
        - virtuousai
        - webpurify
        - xai
      type: string
      x-enum-varnames:
        - ProviderIDAlibabaQwen
        - ProviderIDAnthropic
        - ProviderIDAnyscale
        - ProviderIDCerebras
        - ProviderIDCheckstep
        - ProviderIDCohere
        - ProviderIDConectys
        - ProviderIDCove
        - ProviderIDDeepMind
        - ProviderIDDeepSeek
        - ProviderIDGoogleAIStudio
        - ProviderIDGoogleVertex
        - ProviderIDGroq
        - ProviderIDHuggingFace
        - ProviderIDMeta
        - ProviderIDMicrosoft
        - ProviderIDMistralAI
        - ProviderIDOpenAI
        - ProviderIDOpenRouter
        - ProviderIDPerplexity
        - ProviderIDReplicate
        - ProviderIDSafetyKit
        - ProviderIDTogetherAI
        - ProviderIDVirtuousAI
        - ProviderIDWebPurify
        - ProviderIDXAI
    catalogs.ProviderPrivacyPolicy:
      properties:
        privacy_policy_url:
          description: Link to privacy policy
          type: string
        retains_data:
          description: Whether provider stores/retains user data
          type: boolean
        terms_of_service_url:
          description: Link to terms of service
          type: string
        trains_on_data:
          description: Whether provider trains models on user data
          type: boolean
      type: object
    catalogs.ProviderRetentionPolicy:
      properties:
        details:
          description: Human-readable description
          type: string
        duration:
          allOf:
            - $ref: "#/components/schemas/time.Duration"
          description: nil = forever, 0 = immediate deletion
        type:
          allOf:
            - $ref: "#/components/schemas/catalogs.ProviderRetentionType"
          description: Type of retention policy
      type: object
    catalogs.ProviderRetentionType:
      enum:
        - fixed
        - none
        - indefinite
        - conditional
      type: string
      x-enum-comments:
        ProviderRetentionTypeConditional: Based on conditions (e.g., "until account deletion")
        ProviderRetentionTypeFixed: Specific duration (use Duration field)
        ProviderRetentionTypeIndefinite: Forever (duration = nil)
        ProviderRetentionTypeNone: No retention (immediate deletion)
      x-enum-descriptions:
        - Specific duration (use Duration field)
        - No retention (immediate deletion)
        - Forever (duration = nil)
        - Based on conditions (e.g., "until account deletion")
      x-enum-varnames:
        - ProviderRetentionTypeFixed
        - ProviderRetentionTypeNone
        - ProviderRetentionTypeIndefinite
        - ProviderRetentionTypeConditional
    catalogs.Quantization:
      enum:
        - int4
        - int8
        - fp4
        - fp6
        - fp8
        - fp16
        - bf16
        - fp32
        - unknown
      type: string
      x-enum-comments:
        QuantizationBF16: Brain floating point (16 bit)
        QuantizationFP4: Floating point (4 bit)
        QuantizationFP6: Floating point (6 bit)
        QuantizationFP8: Floating point (8 bit)
        QuantizationFP16: Floating point (16 bit)
        QuantizationFP32: Floating point (32 bit)
        QuantizationINT4: Integer (4 bit)
        QuantizationINT8: Integer (8 bit)
        QuantizationUnknown: Unknown quantization
      x-enum-descriptions:
        - Integer (4 bit)
        - Integer (8 bit)
        - Floating point (4 bit)
        - Floating point (6 bit)
        - Floating point (8 bit)
        - Floating point (16 bit)
        - Brain floating point (16 bit)
        - Floating point (32 bit)
        - Unknown quantization
      x-enum-varnames:
        - QuantizationINT4
        - QuantizationINT8
        - QuantizationFP4
        - QuantizationFP6
        - QuantizationFP8
        - QuantizationFP16
        - QuantizationBF16
        - QuantizationFP32
        - QuantizationUnknown
    catalogs.Tokenizer:
      enum:
        - claude
        - cohere
        - deepseek
        - gpt
        - gemini
        - grok
        - llama2
        - llama3
        - llama4
        - mistral
        - nova
        - qwen
        - qwen3
        - router
        - yi
        - unknown
      type: string
      x-enum-comments:
        TokenizerClaude: Claude tokenizer
        TokenizerCohere: Cohere tokenizer
        TokenizerDeepSeek: DeepSeek tokenizer
        TokenizerGPT: GPT tokenizer (OpenAI)
        TokenizerGemini: Gemini tokenizer (Google)
        TokenizerGrok: Grok tokenizer (xAI)
        TokenizerLlama2: LLaMA 2 tokenizer
        TokenizerLlama3: LLaMA 3 tokenizer
        TokenizerLlama4: LLaMA 4 tokenizer
        TokenizerMistral: Mistral tokenizer
        TokenizerNova: Nova tokenizer (Amazon)
        TokenizerQwen: Qwen tokenizer
        TokenizerQwen3: Qwen 3 tokenizer
        TokenizerRouter: Router-based tokenizer
        TokenizerUnknown: Unknown tokenizer type
        TokenizerYi: Yi tokenizer
      x-enum-descriptions:
        - Claude tokenizer
        - Cohere tokenizer
        - DeepSeek tokenizer
        - GPT tokenizer (OpenAI)
        - Gemini tokenizer (Google)
        - Grok tokenizer (xAI)
        - LLaMA 2 tokenizer
        - LLaMA 3 tokenizer
        - LLaMA 4 tokenizer
        - Mistral tokenizer
        - Nova tokenizer (Amazon)
        - Qwen tokenizer
        - Qwen 3 tokenizer
        - Router-based tokenizer
        - Yi tokenizer
        - Unknown tokenizer type
      x-enum-varnames:
        - TokenizerClaude
        - TokenizerCohere
        - TokenizerDeepSeek
        - TokenizerGPT
        - TokenizerGemini
        - TokenizerGrok
        - TokenizerLlama2
        - TokenizerLlama3
        - TokenizerLlama4
        - TokenizerMistral
        - TokenizerNova
        - TokenizerQwen
        - TokenizerQwen3
        - TokenizerRouter
        - TokenizerYi
        - TokenizerUnknown
    catalogs.ToolChoice:
      enum:
        - auto
        - none
        - required
      type: string
      x-enum-comments:
        ToolChoiceAuto: Model autonomously decides whether to call tools based on context
        ToolChoiceNone: Model will never call tools, even if tool definitions are provided
        ToolChoiceRequired: Model must call at least one tool before responding
      x-enum-descriptions:
        - Model autonomously decides whether to call tools based on context
        - Model will never call tools, even if tool definitions are provided
        - Model must call at least one tool before responding
      x-enum-varnames:
        - ToolChoiceAuto
        - ToolChoiceNone
        - ToolChoiceRequired
    response.Error:
      properties:
        code:
          type: string
        details:
          type: string
        message:
          type: string
      type: object
    response.Response:
      properties:
        data: {}
        error:
          $ref: "#/components/schemas/response.Error"
      type: object
    serve.DateRange:
      properties:
        after:
          type: string
        before:
          type: string
      type: object
    serve.IntRange:
      properties:
        max:
          type: integer
        min:
          type: integer
      type: object
    serve.SearchModalities:
      properties:
        input:
          items:
            type: string
          type: array
        output:
          items:
            type: string
          type: array
      type: object
    serve.SearchRequest:
      properties:
        context_window:
          $ref: "#/components/schemas/serve.IntRange"
        features:
          additionalProperties:
            type: boolean
          type: object
        ids:
          items:
            type: string
          type: array
        max_results:
          type: integer
        modalities:
          $ref: "#/components/schemas/serve.SearchModalities"
        name_contains:
          type: string
        open_weights:
          type: boolean
        order:
          type: string
        output_tokens:
          $ref: "#/components/schemas/serve.IntRange"
        provider:
          type: string
        release_date:
          $ref: "#/components/schemas/serve.DateRange"
        sort:
          type: string
        tags:
          items:
            type: string
          type: array
      type: object
    time.Duration:
      enum:
        - -9223372036854776000
        - 9223372036854776000
        - 1
        - 1000
        - 1000000
        - 1000000000
        - 60000000000
        - 3600000000000
      format: int64
      type: integer
      x-enum-varnames:
        - minDuration
        - maxDuration
        - Nanosecond
        - Microsecond
        - Millisecond
        - Second
        - Minute
        - Hour
