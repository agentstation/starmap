version: 2

before:
  hooks:
    - go mod tidy
    - go generate ./...
    - rm -rf completions
    - mkdir completions
    - rm -rf manpages
    - mkdir manpages
    - sh -c 'go run ./cmd/starmap completion bash > ./completions/starmap.bash'
    - sh -c 'go run ./cmd/starmap completion zsh > ./completions/starmap.zsh'
    - sh -c 'go run ./cmd/starmap completion fish > ./completions/starmap.fish'
    - sh -c 'go run ./cmd/starmap man | gzip -c > ./manpages/starmap.1.gz'

builds:
  - id: starmap
    binary: starmap
    env:
      - CGO_ENABLED=0
    main: ./cmd/starmap
    mod_timestamp: '{{ .CommitTimestamp }}'
    flags:
      - -trimpath
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    goos:
      - linux
      - darwin
      - windows
    goarch:
      - amd64
      - arm64
    # Skip windows/arm64 as it's not well supported
    ignore:
      - goos: windows
        goarch: arm64

archives:
  - id: starmap
    ids:
      - starmap
    formats: [tar.gz]
    format_overrides:
      - goos: windows
        formats: [zip]
    name_template: >-
      {{ .ProjectName }}_
      {{- .Version }}_
      {{- .Os }}_
      {{- if eq .Arch "amd64" }}x86_64
      {{- else if eq .Arch "386" }}i386
      {{- else }}{{ .Arch }}{{ end }}
      {{- if .Arm }}v{{ .Arm }}{{ end }}
    files:
      - README.md
      - LICENSE*
      - CHANGELOG.md
      - completions/*
      - manpages/*

checksum:
  name_template: 'checksums.txt'
  algorithm: sha256

sboms:
  - artifacts: archive
    documents:
      - "${artifact}.sbom.json"

snapshot:
  version_template: "{{ incpatch .Version }}-next"

changelog:
  sort: asc
  use: github
  filters:
    exclude:
      - '^docs:'
      - '^test:'
      - '^chore:'
      - '^style:'
      - '^refactor:'
      - Merge pull request
      - Merge remote-tracking branch
      - Merge branch
  groups:
    - title: '‚ú® Features'
      regexp: '^.*?feat(\([[:word:]]+\))??!?:.+$'
      order: 0
    - title: 'üêõ Bug Fixes'
      regexp: '^.*?fix(\([[:word:]]+\))??!?:.+$'
      order: 1
    - title: '‚ö° Performance'
      regexp: '^.*?perf(\([[:word:]]+\))??!?:.+$'
      order: 2
    - title: 'üî® Build'
      regexp: '^.*?build(\([[:word:]]+\))??!?:.+$'
      order: 3
    - title: 'üöÄ CI/CD'
      regexp: '^.*?ci(\([[:word:]]+\))??!?:.+$'
      order: 4
    - title: 'üìù Documentation'
      regexp: '^.*?docs(\([[:word:]]+\))??!?:.+$'
      order: 5
    - title: 'Others'
      order: 999

release:
  github:
    owner: agentstation
    name: starmap
  
  header: |
    ## Starmap {{ .Version }} ({{ .Date }})
    
    Welcome to Starmap v{{ .Version }}! This release includes improvements to the AI model catalog system.
    
    ### Installation
    
    **Homebrew (macOS/Linux):**
    ```bash
    brew install agentstation/tap/starmap
    ```
    
    **Go Install:**
    ```bash
    go install github.com/agentstation/starmap/cmd/starmap@v{{ .Version }}
    ```
    
    **Docker:**
    ```bash
    docker pull ghcr.io/agentstation/starmap:{{ .Version }}
    ```
    
    ### Documentation
    
    üìö **[View Documentation](https://starmap.agentstation.ai/)**
    
  footer: |
    ---
    
    **Full Changelog**: https://github.com/agentstation/starmap/compare/{{ .PreviousTag }}...{{ .Tag }}
    
    Thanks to all contributors! üéâ

  # Automatically close milestones
  name_template: "v{{ .Version }}"
  
  # Attach built binaries
  draft: false
  prerelease: auto
  
  # Discussion category for releases
  discussion_category_name: releases

# Announce releases
announce:
  skip: false

# Ko configuration - secure, minimal container images
# Uses cgr.dev/chainguard/static (~2MB, zero CVEs)
# No Dockerfile needed - builds directly from Go source
kos:
  - id: starmap-server
    build: starmap
    repositories:
      - ghcr.io/agentstation/starmap
    main: ./cmd/starmap
    platforms:
      - linux/amd64
      - linux/arm64
    tags:
      - "{{ .Version }}"  # e.g., 0.0.17
      - "{{ .Tag }}"      # e.g., v0.0.17
      - "latest"
    base_image: cgr.dev/chainguard/static:latest
    sbom: spdx
    bare: true
    preserve_import_paths: false
    base_import_paths: false
    ldflags:
      - -s -w
      - -X main.version={{.Version}}
      - -X main.commit={{.ShortCommit}}
      - -X main.date={{.Date}}
      - -X main.builtBy=goreleaser
    flags:
      - -trimpath
    env:
      - CGO_ENABLED=0
    labels:
      org.opencontainers.image.title: "{{.ProjectName}}"
      org.opencontainers.image.description: "AI Model Catalog System - HTTP Server"
      org.opencontainers.image.created: "{{.Date}}"
      org.opencontainers.image.revision: "{{.FullCommit}}"
      org.opencontainers.image.version: "{{.Version}}"
      org.opencontainers.image.source: "{{.GitURL}}"
      org.opencontainers.image.licenses: "AGPL-3.0"
      org.opencontainers.image.url: "https://github.com/agentstation/starmap"
      org.opencontainers.image.documentation: "https://starmap.agentstation.ai"

# Homebrew Cask
homebrew_casks:
  - repository:
      owner: agentstation
      name: homebrew-tap
      token: "{{ .Env.HOMEBREW_TAP_TOKEN }}"
    
    # Cask name
    name: starmap
    
    # Directory inside the repository (default is Casks)
    directory: Casks
    
    # Git commit information
    commit_author:
      name: "GitHub Actions"
      email: "actions@github.com"
    commit_msg_template: "Update starmap to {{ .Tag }}"
    
    # Homepage
    homepage: "https://github.com/agentstation/starmap"
    
    # Description
    description: "AI Model Catalog System - Discover, compare, and sync AI models across providers"
    
    # License
    license: "AGPL-3.0"
    
    # Binary name (extracted from archive)
    binary: starmap
    
    # Post-install hook for unsigned binaries (macOS)
    hooks:
      post:
        install: |
          if system_command("/usr/bin/xattr", args: ["-h"]).exit_status == 0
            system_command "/usr/bin/xattr", args: ["-dr", "com.apple.quarantine", "#{staged_path}/starmap"], sudo: false
          end
    
    # Shell completions (files included in the archive)
    completions:
      bash: completions/starmap.bash
      zsh: completions/starmap.zsh
      fish: completions/starmap.fish
    
    # Custom caveats
    caveats: |
      Starmap has been installed! ‚≠êüó∫Ô∏è
      
      Quick start:
        starmap list models              # List all AI models
        starmap fetch models --provider openai  # Fetch live model data
        starmap update                   # Update entire catalog
        starmap --help                   # Show all commands
      
      Shell completions have been installed to:
        Bash: #{HOMEBREW_PREFIX}/etc/bash_completion.d
        Zsh:  #{HOMEBREW_PREFIX}/share/zsh/site-functions
        Fish: #{HOMEBREW_PREFIX}/share/fish/vendor_completions.d
      
      Documentation: https://starmap.agentstation.ai/

# Sign release artifacts
signs:
  - cmd: gpg
    args:
      - "--batch"
      - "--yes"
      - "--pinentry-mode"
      - "loopback"
      - "--passphrase"
      - "{{ .Env.GPG_PASSPHRASE }}"
      - "--output"
      - "${signature}"
      - "--detach-sig"
      - "${artifact}"
    artifacts: checksum
    
# Binary signing disabled - checksums.txt signing provides sufficient verification
# Individual binary signatures add confusion without significant security benefit
# since binaries are already distributed in archives with signed checksums.
# Uncomment below to sign individual binaries if needed:
# binary_signs:
#   - signature: "${artifact}.sig"
#     cmd: gpg
#     args:
#       - "--batch"
#       - "--yes"
#       - "--pinentry-mode"
#       - "loopback"
#       - "--passphrase"
#       - "{{ .Env.GPG_PASSPHRASE }}"
#       - "--output"
#       - "${signature}"
#       - "--detach-sig"
#       - "${artifact}"
#     artifacts: binary