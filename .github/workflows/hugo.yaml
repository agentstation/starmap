# GitHub Actions workflow for building and deploying Hugo site to GitHub Pages
name: Deploy Hugo site to Pages

on:
  # Runs on pushes targeting the default branch
  push:
    branches:
      - master
    # Also trigger on version tags
    tags:
      - 'v*'
  
  # Runs on pull requests
  pull_request:
    branches:
      - master
  
  # Allows you to run this workflow manually from the Actions tab
  workflow_dispatch:

# Sets permissions of the GITHUB_TOKEN to allow deployment to GitHub Pages
permissions:
  contents: read
  pages: write
  id-token: write

# Allow only one concurrent deployment, skipping runs queued between the run in-progress and latest queued.
# However, do NOT cancel in-progress runs as we want to allow these production deployments to complete.
concurrency:
  group: "pages"
  cancel-in-progress: false

# Default to bash
defaults:
  run:
    shell: bash

jobs:
  # Build job
  build:
    runs-on: ubuntu-latest
    env:
      HUGO_VERSION: 0.138.0
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0  # Fetch all history for .GitInfo and .Lastmod
      
      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.21'
      
      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: ${{ env.HUGO_VERSION }}
          extended: true
      
      - name: Setup Node
        uses: actions/setup-node@v4
        with:
          node-version: '20'
          cache: 'npm'
          cache-dependency-path: site/package-lock.json
        if: hashFiles('site/package-lock.json') != ''
      
      - name: Install Node dependencies
        run: |
          if [ -f site/package.json ]; then
            cd site && npm ci
          fi
      
      - name: Setup Pages
        id: pages
        uses: actions/configure-pages@v5
        if: github.event_name != 'pull_request'
      
      - name: Install Dart Sass
        run: sudo snap install dart-sass
      
      - name: Ensure content symlink exists
        run: |
          cd site
          # Remove existing symlink or directory if it exists
          rm -rf content
          # Create fresh symlink
          ln -s ../docs content
      
      - name: Download Hugo theme
        run: |
          cd site
          git submodule add https://github.com/alex-shpak/hugo-book themes/hugo-book || true
          git submodule update --init --recursive
      
      - name: Build with Hugo
        env:
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache
          HUGO_ENVIRONMENT: production
          TZ: UTC
        run: |
          cd site
          hugo \
            --gc \
            --minify \
            --baseURL "${{ steps.pages.outputs.base_url }}/" \
            --buildDrafts=${{ github.event_name == 'pull_request' }}
      
      - name: Upload artifact
        uses: actions/upload-pages-artifact@v3
        with:
          path: ./site/public
        if: github.event_name != 'pull_request'
      
      - name: Upload preview artifact
        uses: actions/upload-artifact@v4
        with:
          name: hugo-preview-${{ github.event.pull_request.number || github.sha }}
          path: ./site/public
        if: github.event_name == 'pull_request'

  # Deployment job
  deploy:
    environment:
      name: github-pages
      url: ${{ steps.deployment.outputs.page_url }}
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name != 'pull_request'
    steps:
      - name: Deploy to GitHub Pages
        id: deployment
        uses: actions/deploy-pages@v4

  # Comment on PR with preview link
  preview-comment:
    runs-on: ubuntu-latest
    needs: build
    if: github.event_name == 'pull_request'
    permissions:
      pull-requests: write
    steps:
      - name: Comment preview link
        uses: actions/github-script@v7
        with:
          script: |
            const artifactUrl = `https://github.com/${{ github.repository }}/actions/runs/${{ github.run_id }}`;
            const comment = `ðŸ“š **Documentation Preview Ready!**
            
            The documentation has been built successfully. You can download the preview artifact from:
            ${artifactUrl}
            
            Once this PR is merged, the documentation will be automatically deployed to GitHub Pages.`;
            
            github.rest.issues.createComment({
              issue_number: context.issue.number,
              owner: context.repo.owner,
              repo: context.repo.repo,
              body: comment
            });