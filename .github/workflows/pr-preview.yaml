name: PR Preview Deployment

on:
  pull_request:
    types: [opened, synchronize, reopened, closed]

permissions:
  contents: read
  pull-requests: write

jobs:
  # Cleanup job - runs when PR is closed or merged
  cleanup-preview:
    if: github.event.action == 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Teardown Surge.sh preview
        run: |
          npm install -g surge
          surge teardown starmap-pr-${{ github.event.pull_request.number }}.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}
        continue-on-error: true
      
      - name: Comment on PR about cleanup
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.issue.number;
            
            // Find existing preview comment
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Documentation Preview')
            );
            
            const mergeStatus = context.payload.pull_request.merged ? 'merged' : 'closed';
            const commentBody = `## 📚 Documentation Preview
            
            ❌ **Preview Removed**: This PR has been ${mergeStatus}.
            
            The preview deployment at \`starmap-pr-${pr_number}.surge.sh\` has been cleaned up.
            
            ${context.payload.pull_request.merged ? 
              '✅ Changes have been deployed to the main documentation site.' : 
              '⚠️ This PR was closed without merging.'}`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            }

  # Build and deploy job - runs when PR is opened, synchronized, or reopened
  build-and-preview:
    if: github.event.action != 'closed'
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          submodules: recursive
          fetch-depth: 0

      - name: Setup Go
        uses: actions/setup-go@v5
        with:
          go-version: '1.23'

      - name: Generate documentation
        run: |
          go run ./cmd/starmap/main.go generate docs --output ./docs --verbose

      - name: Setup Hugo
        uses: peaceiris/actions-hugo@v3
        with:
          hugo-version: '0.148.0'
          extended: true

      - name: Ensure content symlink exists
        run: |
          cd site
          rm -rf content
          ln -s ../docs content

      - name: Initialize Hugo theme submodule
        run: |
          git submodule update --init --recursive
          cd site/themes/hugo-book/layouts
          ln -s _partials partials || true

      - name: Build with Hugo
        env:
          HUGO_BASEURL: "https://starmap-pr-${{ github.event.pull_request.number }}.surge.sh/"
          HUGO_CACHEDIR: ${{ runner.temp }}/hugo_cache_pr
        run: |
          cd site
          rm -rf public resources
          hugo --gc --minify --baseURL "https://starmap-pr-${{ github.event.pull_request.number }}.surge.sh/"

      - name: Deploy to Surge.sh
        run: |
          npm install -g surge
          surge --project ./site/public --domain starmap-pr-${{ github.event.pull_request.number }}.surge.sh
        env:
          SURGE_LOGIN: ${{ secrets.SURGE_LOGIN }}
          SURGE_TOKEN: ${{ secrets.SURGE_TOKEN }}

      - name: Comment PR with preview link
        uses: actions/github-script@v7
        with:
          script: |
            const pr_number = context.issue.number;
            const preview_url = `https://starmap-pr-${pr_number}.surge.sh`;
            
            // Find and update existing comment or create new one
            const { data: comments } = await github.rest.issues.listComments({
              owner: context.repo.owner,
              repo: context.repo.repo,
              issue_number: pr_number,
            });
            
            const botComment = comments.find(comment => 
              comment.user.type === 'Bot' && 
              comment.body.includes('Documentation Preview')
            );
            
            const commentBody = `## 📚 Documentation Preview
            
            🔗 **Live Preview**: ${preview_url}
            
            This preview will be automatically updated when you push new commits to this PR.
            
            ---
            
            | Status | Preview URL | Deployment |
            |--------|-------------|------------|
            | ✅ Ready | [View Preview](${preview_url}) | PR #${pr_number} |
            
            *Preview deployments are provided by [Surge.sh](https://surge.sh)*`;
            
            if (botComment) {
              await github.rest.issues.updateComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                comment_id: botComment.id,
                body: commentBody
              });
            } else {
              await github.rest.issues.createComment({
                owner: context.repo.owner,
                repo: context.repo.repo,
                issue_number: pr_number,
                body: commentBody
              });
            }