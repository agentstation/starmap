name: Release

on:
  push:
    tags:
      - "v*"

permissions:
  contents: write
  packages: write
  discussions: write

jobs:
  test:
    runs-on: ubuntu-latest
    steps:
      - uses: actions/checkout@v4
        with:
          lfs: true

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      - name: Install golangci-lint
        run: go install github.com/golangci/golangci-lint/v2/cmd/golangci-lint@v2.4.0

      - name: Run comprehensive tests
        run: |
          make test
          make test-race
          make lint

  check-homebrew-eligibility:
    runs-on: ubuntu-latest
    continue-on-error: true
    outputs:
      eligible: ${{ steps.check.outputs.eligible }}
      stars: ${{ steps.check.outputs.stars }}
      forks: ${{ steps.check.outputs.forks }}
    steps:
      - name: Check notability requirements
        id: check
        run: |
          # Get repository stats via GitHub API
          REPO_JSON=$(curl -s https://api.github.com/repos/${{ github.repository }})
          STARS=$(echo "$REPO_JSON" | jq '.stargazers_count')
          FORKS=$(echo "$REPO_JSON" | jq '.forks_count')
          WATCHERS=$(echo "$REPO_JSON" | jq '.watchers_count')
          
          echo "stars=$STARS" >> $GITHUB_OUTPUT
          echo "forks=$FORKS" >> $GITHUB_OUTPUT
          
          echo "📊 Current Stats:"
          echo "  Stars: $STARS"
          echo "  Forks: $FORKS"  
          echo "  Watchers: $WATCHERS"
          
          # Check if we meet requirements (75+ stars OR 30+ forks/watchers)
          if [[ $STARS -ge 75 ]] || [[ $FORKS -ge 30 ]] || [[ $WATCHERS -ge 30 ]]; then
            echo "✅ Eligible for homebrew-cask!"
            echo "eligible=true" >> $GITHUB_OUTPUT
          else
            NEEDED=$((75 - STARS))
            echo "📈 Need $NEEDED more stars to qualify for homebrew-cask"
            echo "📦 Release will still proceed to agentstation/tap/starmap"
            echo "eligible=false" >> $GITHUB_OUTPUT
          fi
          
          echo "✅ Eligibility check completed"

  release:
    needs: [test, check-homebrew-eligibility]
    runs-on: ubuntu-latest
    steps:
      - name: Checkout
        uses: actions/checkout@v4
        with:
          fetch-depth: 0

      - name: Set up Go
        uses: actions/setup-go@v5
        with:
          go-version-file: go.mod
          cache: true

      # Install gomarkdoc for go generate in GoReleaser's before hooks
      - name: Install gomarkdoc
        run: go install github.com/princjef/gomarkdoc/cmd/gomarkdoc@latest

      # Log in to GitHub Container Registry for ko image pushes
      - name: Log in to GitHub Container Registry
        uses: docker/login-action@v3
        with:
          registry: ghcr.io
          username: ${{ github.actor }}
          password: ${{ secrets.GITHUB_TOKEN }}

      # Install Syft for GoReleaser's SBOM generation (archives)
      # Note: ko generates SBOMs for container images automatically
      - name: Install Syft
        uses: anchore/sbom-action/download-syft@v0.20.4

      # Import GPG key for GoReleaser's artifact signing
      - name: Import GPG key
        env:
          GPG_PRIVATE_KEY: ${{ secrets.ORG_GPG_PRIVATE_KEY }}
          GPG_PASSPHRASE: ${{ secrets.ORG_GPG_PASSPHRASE }}
        run: |
          echo "$GPG_PRIVATE_KEY" | gpg --batch --import
          # Configure GPG for non-interactive use
          echo "allow-loopback-pinentry" >> ~/.gnupg/gpg-agent.conf
          gpgconf --reload gpg-agent
          # Set up git config for signing
          git config --global user.signingkey ${{ vars.ORG_GPG_KEY_ID }}

      - name: Run GoReleaser
        uses: goreleaser/goreleaser-action@v6
        with:
          distribution: goreleaser
          version: "~> v2"
          args: release --clean --parallelism 2
        env:
          GITHUB_TOKEN: ${{ secrets.GITHUB_TOKEN }}
          HOMEBREW_TAP_TOKEN: ${{ secrets.HOMEBREW_TAP_TOKEN }}
          GPG_PASSPHRASE: ${{ secrets.ORG_GPG_PASSPHRASE }}

      - name: Create first-time submission issue
        if: needs.check-homebrew-eligibility.outputs.eligible == 'true'
        uses: actions/github-script@v7
        with:
          script: |
            // Check if starmap already exists in homebrew-cask
            try {
              const response = await fetch('https://formulae.brew.sh/api/cask/starmap.json');
              if (response.ok) {
                console.log('✅ Starmap already in homebrew-cask!');
                return;
              }
            } catch (e) {
              // Not in homebrew-cask yet, continue
            }
            
            // Check for existing open issue
            const issues = await github.rest.issues.listForRepo({
              owner: context.repo.owner,
              repo: context.repo.repo,
              labels: 'homebrew-cask-ready',
              state: 'open'
            });
            
            if (issues.data.length === 0) {
              const tag = context.ref.replace('refs/tags/', '');
              
              await github.rest.issues.create({
                owner: context.repo.owner,
                repo: context.repo.repo,
                title: `🎉 Submit ${tag} to homebrew-cask`,
                body: `## Starmap is eligible for homebrew-cask! 🚀
                
                ### Current Stats
                - ⭐ **Stars**: ${{ needs.check-homebrew-eligibility.outputs.stars }}
                - 🍴 **Forks**: ${{ needs.check-homebrew-eligibility.outputs.forks }}
                
                ### Version to Submit
                **${tag}** - The release that just completed
                
                ### Manual First Submission Required
                
                Since this is our first submission to homebrew-cask, it must be done manually:
                
                1. ✅ GoReleaser has generated the cask in our tap
                2. 📋 Copy from: https://github.com/agentstation/homebrew-tap/blob/main/Casks/starmap.rb  
                3. 🔧 Test locally with \`brew audit --cask starmap\`
                4. 📝 Submit PR to homebrew-cask manually (one-time)
                
                ### After First Acceptance
                Future updates can be automated with the \`bump-homebrew-cask.yaml\` workflow.
                
                ### References
                - [Release](https://github.com/agentstation/starmap/releases/tag/${tag})
                - [Submission Guide](.github/HOMEBREW_SUBMISSION.md)
                - [Homebrew-Cask Contributing](https://github.com/Homebrew/homebrew-cask/blob/master/CONTRIBUTING.md)
                `,
                labels: ['homebrew-cask-ready', 'enhancement']
              });
              
              console.log('✅ Created homebrew-cask submission issue');
            } else {
              console.log('📝 Issue already exists, skipping creation');
            }

      - name: Upload release artifacts
        if: failure()
        uses: actions/upload-artifact@v4
        with:
          name: dist
          path: dist/
